name: Add coverage comment on PR

on:
  workflow_run:
    workflows: ["Test and lint"]
    types:
      - completed
      
permissions: {}

jobs:
  cov-report:
    permissions:
        contents: read
        pull-requests: write
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request'
    steps:
      - name: script get number
        id: get_pr_data_a
        run: |
          PR_DATA=$(curl https://api.github.com/search/issues?q=repo:${{github.repository}}+type:pr+sha:${{github.event.workflow_run.head_sha}})
          echo "result=$PR_DATA" >> $GITHUB_OUTPUT
      - name: process PR data
        id: get_pr_data
        run: |
          echo "pR data is: $PR_DATA"
          echo ${{ steps.get_pr_data_a.outputs }}
          echo ${{ fromJson(steps.get_pr_data_a.outputs.items) }}
          echo ${{ fromJson(steps.get_pr_data_a.outputs).items[0] }}
          echo ${{ fromJson(steps.get_pr_data_a.outputs).items[0].number }}
          echo "pr_number=${{ fromJson(steps.get_pr_data_a.outputs).items[0].number }}" >> $GITHUB_OUTPUT
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          pattern: coverage.xml
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: check output
        run: |
          ls -a
          ls coverage -a
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # v1.3.0
        with:
          filename: coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '80 90'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728  # v2.9.3
        with:
          recreate: true
          path: code-coverage-results.md
          number: ${{ steps.get_pr.outputs.pr_number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
