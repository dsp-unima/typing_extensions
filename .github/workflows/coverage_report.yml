name: Add coverage comment on PR

on:
  workflow_run:
    workflows: ["Test and lint"]
    types:
      - completed
      
permissions: {}

jobs:
  cov-report:
    permissions:
        contents: read
        pull-requests: write
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request'
    steps:
      - name: script get number
        id: get_pr_data
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Step 1: Find the PR associated with the current commit
            const prs = await github.rest.repos.listPullRequestsAssociatedWithCommit({
              owner: "${{ github.repository }}"".split('/')[0],
              repo: ${{ github.repository }}"".split('/')[1],
              commit_sha: ${{ github.event.workflow_run.head_sha }},
            });
      - name: Pull Request data
        run: |
          echo ${{ steps.get_pr_data.outputs.result }}
          echo "-----"
          echo '${{ fromJson(steps.get_pr_data.outputs.result).number }}'
          echo '${{ fromJson(steps.get_pr_data.outputs.result).title }}'
      - name: Get PR number from commit SHA
        id: get_pr
        env:
          # token might be wrong
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHA="${{ github.event.workflow_run.head_sha }}"
          REPO="${{ github.repository }}"
          PR_DATA=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/$REPO/commits/$SHA/pulls \
          )
          echo "$PR_DATA"  # remove might reveal sensitive data
          PR_NUMBER=$(echo "$PR_DATA" | jq '.[0].number')
          if [ "$PR_NUMBER" = "null" ] || [ -z "$PR_NUMBER" ]; then
            echo "Error: No pull request found for commit $SHA"
          fi
          echo "PR number is $PR_NUMBER"
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          pattern: coverage.xml
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@51cc3a756ddcd398d447c044c02cb6aa83fdae95 # v1.3.0
        with:
          filename: coverage/coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '80 90'
      - name: check output
        run: |
          ls -a
          ls coverage -a
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@52423e01640425a022ef5fd42c6fb5f633a02728  # v2.9.3
        with:
          recreate: true
          path: code-coverage-results.md
          number: ${{ steps.get_pr.outputs.pr_number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
